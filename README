Qubes Yubikey
-------------

The Qubes Yubikey provides an easy way to integrate the Yubikey into your
existing Qubes user authentication in order to mitigate the risk of having
someone or something snooping on your keyboard while you type your password.

It has been designed to be used with a USB VM to protect against USB attacks.

http://www.yubico.com
http://www.qubes-os.org


Passing the OTP from the USB VM to dom0:
----------------------------------------

Qubes Yubikey is composed of a front-end which capture the Yubikey OTP, of a
back-end which makes it available for consuption in dom0 and of a PAM Module
which validates the OTP. A password can also be configured to be part of your
credentials and mitigate the risk of getting your Yubikey lost or stollen.

To protect Dom0 from attacks via USB, a USB VM capturing all the PCI devices on
which USB controllers are connected must be configured (with possibly the
exception of the controller managing your keyboard and touchpad if you have such
hardware and no other USB devices can be connected to this USB controller).

The Qubes Yubikey front-end has been designed to be installed in such a VM.
After configuration, it will detect when you insert a Yubikey in your USB port.
You then have to press the Yubikey button once. The OTP is captured by the Qubes
Yubikey front-end. When you remove the Yubikey from the USB port, the Qubes
Yubikey front-end detects this event and transmit via qrexec the OTP to Dom0.
This behavior is to prevent you from forgetting your Yubikey in the USB port.

The Qubes Yubikey back-end just take the OTP and store it in a file in Dom0.


Usage
-----

The Qubes Yubikey PAM module, will request for a yubikey OTP and a Password.

Insert the Yubikey, press the button and remove the key, then, if you have
configured it, type your Yubikey associated password and hit enter.

If the OTP validation fails, the Qubes yubikey PAM module assumes that the
USB VM is compromised and will not accept further Yubikey authentication until
you clean the system up.

You can however authenticate with your original Unix password from a location
where snooping is not a risk.


Qubes Yubikey PAM module logic
------------------------------

The PAM module will parse the password and make it available to other PAM
modules.
If the password is correct, the OTP will be read from the file the back-end
wrote. The OTP is then decrypted; its CRC checked; validation will be done to
ensure that the OTP was generated as the first button press after insertion
and that the counter is the next consecutive value only to prevent replay
attacks.


Installation
------------

You can install the package from Qubes repository
on the USB-VM:
  $ sudo yum install qubes-app-linux-yubikey-client

on dom0:
  $ sudo yum install qubes-app-linux-yubikey-server


Configuration
-------------

Install it in your PAM setup by adding a line to an appropriate file
in /etc/pam.d/:

------
  auth sufficient pam_qubes_yubikey.so pwd=trythis aeskey=1234567890ABCDEF1234567890ABCDEF
------

Supported PAM module parameters are:

  "pwd":        The password used to authenticate in conjunction to the
                Yubikey OTP.

  "aeskey":     Your Yubikey key symetric AES key.

  "debug":      to enable debug output to stdout.

  "alwaysok":   to enable all authentication attempts to succeed
                (aka presentation mode).

If you are using "debug" you may find it useful to create a
world-writable log file:

------
  touch /var/run/pam-debug.log
  chmod go+w /var/run/pam-debug.log
------


Feedback
--------

If you want to discuss anything related to Qubes Yubikey,
please e-mail the mailing list qubes-devel@googlegroups.com.


Source code
-----------

The development community is co-ordinated via Qubes's Git repository :

https://git.qubes-os.org/REPO/qubes-app-linux-yubikey/

The project is licensed under a BSD license.  See the file COPYING for
exact wording.  For any copyright year range specified as YYYY-ZZZZ in
this package note that the range specifies every single year in that
closed interval.


Build dependancies
------------------

Qubes Yubikey has dependancies on libyubikey (yubikey.h, libyubikey.so) and
pam-devel (security/pam_appl.h, libpam.so) installed.

Get libyubikey from

  http://opensource.yubico.com/yubico-c/


Preparing the build
-------------------

You may check out the sources using Git with the following command:

------
   $ git clone git@git.qubes-os.org:REPO/qubes-app-linux-yubikey/qubes-app-linux-yubikey.git qubes-app-linux-yubikey
------

This will create a directory 'qubes-app-linux-yubikey'.

Autoconf, automake and libtool must be installed to create a compilable source
tree.

Generate the build system using:

------
   $ cd qubes-app-linux-yubikey
   $ autoreconf --install
------


Building
--------

The build system uses Autoconf, to set up the build system run:

------
  ./configure
------

Then build the code, run the self-test and install the binaries:

------
  make check
  sudo make install
------

